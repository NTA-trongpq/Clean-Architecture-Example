// Mocks generated by Mockito 5.2.0 from annotations
// in clean_tdd/test/features/data/repositories/cinema/cinema_repositories_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:clean_tdd/features/data/data_sources/remote_data_sources/cinema/i_cinema_data_sources.dart'
    as _i2;
import 'package:clean_tdd/features/data/models/movie/movie_response.dart'
    as _i3;
import 'package:clean_tdd/features/data/repositories/cinema/cinema_repositories.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeICinemaDataSources_0 extends _i1.Fake
    implements _i2.ICinemaDataSources {}

class _FakeMovieResponse_1 extends _i1.Fake implements _i3.MovieResponse {}

/// A class which mocks [CinemaRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockCinemaRepositories extends _i1.Mock
    implements _i4.CinemaRepositories {
  MockCinemaRepositories() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ICinemaDataSources get dataSources =>
      (super.noSuchMethod(Invocation.getter(#dataSources),
          returnValue: _FakeICinemaDataSources_0()) as _i2.ICinemaDataSources);
  @override
  _i5.Future<_i3.MovieResponse> getTopRankingFilms({int? page = 1}) => (super
      .noSuchMethod(Invocation.method(#getTopRankingFilms, [], {#page: page}),
          returnValue:
              Future<_i3.MovieResponse>.value(_FakeMovieResponse_1())) as _i5
      .Future<_i3.MovieResponse>);
}
